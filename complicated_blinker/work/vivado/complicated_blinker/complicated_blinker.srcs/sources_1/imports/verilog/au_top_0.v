/*
   This file was generated automatically by Alchitry Labs version 1.1.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_ed_out;
  reg [1-1:0] M_ed_in;
  edge_detector_2 ed (
    .clk(clk),
    .in(M_ed_in),
    .out(M_ed_out)
  );
  
  wire [1-1:0] M_cblin_out;
  cblinker_3 cblin (
    .clk(clk),
    .rst(rst),
    .out(M_cblin_out)
  );
  reg M_blink_d, M_blink_q = 1'h0;
  
  always @* begin
    M_blink_d = M_blink_q;
    
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = {7'h00, M_blink_q};
    usb_tx = usb_rx;
    M_ed_in = M_cblin_out;
    if (M_ed_out == 1'h1) begin
      M_blink_d = ~M_blink_q;
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_blink_q <= 1'h0;
    end else begin
      M_blink_q <= M_blink_d;
    end
  end
  
endmodule
