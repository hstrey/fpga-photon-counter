module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx           // USB->Serial output
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    edge_detector ed (#RISE(1),#FALL(0));
  }
  
  .clk(clk),.rst(rst) {
    cblinker cblin;
    dff blink;
  }
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    led = c{7h00, blink.q};  // show complicated blinker
    usb_tx = usb_rx;        // echo the serial data
    
    ed.in = cblin.out;
    if (ed.out == 1) {
      blink.d = ~blink.q;
    }

  }
}